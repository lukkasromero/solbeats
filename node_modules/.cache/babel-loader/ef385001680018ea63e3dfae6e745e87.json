{"ast":null,"code":"export var formatTimeStamp=function formatTimeStamp(timestamp){var EventTime=new Date(timestamp*1000).toLocaleTimeString([],{hourCycle:\"h23\"});var eventDate=new Date(timestamp*1000).toLocaleDateString().split(\"/\");var finalDate=[eventDate[2],(\"0\"+eventDate[0]).slice(-2),(\"0\"+eventDate[1]).slice(-2)].join(\"/\");return\"\".concat(finalDate,\" - \").concat(EventTime);};export var timeDifference=function timeDifference(timestamp){var msPerMinute=60*1000;var msPerHour=msPerMinute*60;var msPerDay=msPerHour*24;var msPerMonth=msPerDay*30;var msPerYear=msPerDay*365;var current=new Date();var previous=timestamp*1000;var elapsed=current-previous;if(elapsed<msPerMinute){return Math.round(elapsed/1000)+\" seconds ago\";}else if(elapsed<msPerHour){return Math.round(elapsed/msPerMinute)+\" minutes ago\";}else if(elapsed<msPerDay){return Math.round(elapsed/msPerHour)+\" hours ago\";}else if(elapsed<msPerMonth){return\"approximately \"+Math.round(elapsed/msPerDay)+\" days ago\";}else if(elapsed<msPerYear){return\"approximately \"+Math.round(elapsed/msPerMonth)+\" months ago\";}else{return\"approximately \"+Math.round(elapsed/msPerYear)+\" years ago\";}};export var timestampToLocalHour=function timestampToLocalHour(timestamp){var date=new Date(timestamp*1000);var hour=(date.getHours()<10?\"0\":\"\")+date.getHours();var minute=(date.getMinutes()<10?\"0\":\"\")+date.getMinutes();return\"\".concat(hour,\":\").concat(minute);};export var timestampToLocalDaily=function timestampToLocalDaily(timestamp){var date=new Date(timestamp*1000);var day=(date.getDate()<10?\"0\":\"\")+date.getDate();var month=(date.getMonth()+1<10?\"0\":\"\")+(date.getMonth()+1);var year=(date.getFullYear()<10?\"0\":\"\")+date.getFullYear();return\"\".concat(year,\".\").concat(month,\".\").concat(day);};export var walletAddressSlicer=function walletAddressSlicer(wallet){if(typeof wallet===\"string\"){return wallet.substring(0,5)+\"...\"+wallet.substring(wallet.length-5,wallet.length);}};export var numberWithCommas=function numberWithCommas(number,tofixed){if(tofixed)number=Number(number).toFixed(tofixed);var str=number.toString().split(\".\");str[0]=str[0].replace(/(\\d)(?=(\\d{3})+$)/g,\"$1,\");return str.join(\".\");};","map":{"version":3,"names":["formatTimeStamp","timestamp","EventTime","Date","toLocaleTimeString","hourCycle","eventDate","toLocaleDateString","split","finalDate","slice","join","timeDifference","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","current","previous","elapsed","Math","round","timestampToLocalHour","date","hour","getHours","minute","getMinutes","timestampToLocalDaily","day","getDate","month","getMonth","year","getFullYear","walletAddressSlicer","wallet","substring","length","numberWithCommas","number","tofixed","Number","toFixed","str","toString","replace"],"sources":["D:/Ninja/NINJA TESTEO/src/utils/util.js"],"sourcesContent":["export const formatTimeStamp = (timestamp) => {\n  const EventTime = new Date(timestamp * 1000).toLocaleTimeString([], {\n    hourCycle: \"h23\",\n  });\n  const eventDate = new Date(timestamp * 1000).toLocaleDateString().split(\"/\");\n  const finalDate = [\n    eventDate[2],\n    (\"0\" + eventDate[0]).slice(-2),\n    (\"0\" + eventDate[1]).slice(-2),\n  ].join(\"/\");\n  return `${finalDate} - ${EventTime}`;\n};\n\nexport const timeDifference = (timestamp) => {\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n  const current = new Date();\n  const previous = timestamp * 1000;\n\n  var elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n};\n\nexport const timestampToLocalHour = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let hour = (date.getHours() < 10 ? \"0\" : \"\") + date.getHours();\n  let minute = (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  return `${hour}:${minute}`;\n};\n\nexport const timestampToLocalDaily = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let day = (date.getDate() < 10 ? \"0\" : \"\") + date.getDate();\n  let month = (date.getMonth() + 1 < 10 ? \"0\" : \"\") + (date.getMonth() + 1);\n  let year = (date.getFullYear() < 10 ? \"0\" : \"\") + date.getFullYear();\n  return `${year}.${month}.${day}`;\n};\n\nexport const walletAddressSlicer = (wallet) => {\n  if (typeof wallet === \"string\") {\n    return (\n      wallet.substring(0, 5) +\n      \"...\" +\n      wallet.substring(wallet.length - 5, wallet.length)\n    );\n  }\n};\n\nexport const numberWithCommas = (number, tofixed) => {\n  if (tofixed) number = Number(number).toFixed(tofixed);\n\n  const str = number.toString().split(\".\");\n  str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n\n  return str.join(\".\");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}