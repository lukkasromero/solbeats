{"ast":null,"code":"import _asyncToGenerator from \"D:/Ninja/NINJA TESTEO/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _regeneratorRuntime from \"D:\\\\Ninja\\\\NINJA TESTEO\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";\nimport * as env from \"@walletconnect/environment\";\nimport { ENCRYPT_OP, DECRYPT_OP, SIGN_OP, VERIFY_OP, AES_BROWSER_ALGO, AES_LENGTH, HMAC_BROWSER_ALGO, HMAC_BROWSER, HMAC_LENGTH, SHA256_BROWSER_ALGO, SHA512_BROWSER_ALGO, LENGTH_512 } from \"../constants\";\nexport function getAlgo(type) {\n  return type === AES_BROWSER_ALGO ? {\n    length: AES_LENGTH,\n    name: AES_BROWSER_ALGO\n  } : {\n    hash: {\n      name: HMAC_BROWSER_ALGO\n    },\n    name: HMAC_BROWSER\n  };\n}\nexport function getOps(type) {\n  return type === AES_BROWSER_ALGO ? [ENCRYPT_OP, DECRYPT_OP] : [SIGN_OP, VERIFY_OP];\n}\nexport function browserExportKey(_x) {\n  return _browserExportKey.apply(this, arguments);\n}\n\nfunction _browserExportKey() {\n  _browserExportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cryptoKey) {\n    var type,\n        subtle,\n        _args = arguments;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            type = _args.length > 1 && _args[1] !== undefined ? _args[1] : AES_BROWSER_ALGO;\n            subtle = env.getSubtleCrypto();\n            _context.t0 = Uint8Array;\n            _context.next = 5;\n            return subtle.exportKey(\"raw\", cryptoKey);\n\n          case 5:\n            _context.t1 = _context.sent;\n            return _context.abrupt(\"return\", new _context.t0(_context.t1));\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _browserExportKey.apply(this, arguments);\n}\n\nexport function browserImportKey(_x2) {\n  return _browserImportKey.apply(this, arguments);\n}\n\nfunction _browserImportKey() {\n  _browserImportKey = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(buffer) {\n    var type,\n        _args2 = arguments;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            type = _args2.length > 1 && _args2[1] !== undefined ? _args2[1] : AES_BROWSER_ALGO;\n            return _context2.abrupt(\"return\", env.getSubtleCrypto().importKey(\"raw\", buffer, getAlgo(type), true, getOps(type)));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _browserImportKey.apply(this, arguments);\n}\n\nexport function browserAesEncrypt(_x3, _x4, _x5) {\n  return _browserAesEncrypt.apply(this, arguments);\n}\n\nfunction _browserAesEncrypt() {\n  _browserAesEncrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context3.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n\n          case 3:\n            cryptoKey = _context3.sent;\n            _context3.next = 6;\n            return subtle.encrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n\n          case 6:\n            result = _context3.sent;\n            return _context3.abrupt(\"return\", new Uint8Array(result));\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _browserAesEncrypt.apply(this, arguments);\n}\n\nexport function browserAesDecrypt(_x6, _x7, _x8) {\n  return _browserAesDecrypt.apply(this, arguments);\n}\n\nfunction _browserAesDecrypt() {\n  _browserAesDecrypt = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(iv, key, data) {\n    var subtle, cryptoKey, result;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context4.next = 3;\n            return browserImportKey(key, AES_BROWSER_ALGO);\n\n          case 3:\n            cryptoKey = _context4.sent;\n            _context4.next = 6;\n            return subtle.decrypt({\n              iv: iv,\n              name: AES_BROWSER_ALGO\n            }, cryptoKey, data);\n\n          case 6:\n            result = _context4.sent;\n            return _context4.abrupt(\"return\", new Uint8Array(result));\n\n          case 8:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _browserAesDecrypt.apply(this, arguments);\n}\n\nexport function browserHmacSha256Sign(_x9, _x10) {\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\n\nfunction _browserHmacSha256Sign() {\n  _browserHmacSha256Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context5.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n\n          case 3:\n            cryptoKey = _context5.sent;\n            _context5.next = 6;\n            return subtle.sign({\n              length: HMAC_LENGTH,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n\n          case 6:\n            signature = _context5.sent;\n            return _context5.abrupt(\"return\", new Uint8Array(signature));\n\n          case 8:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _browserHmacSha256Sign.apply(this, arguments);\n}\n\nexport function browserHmacSha512Sign(_x11, _x12) {\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\n\nfunction _browserHmacSha512Sign() {\n  _browserHmacSha512Sign = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, data) {\n    var subtle, cryptoKey, signature;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context6.next = 3;\n            return browserImportKey(key, HMAC_BROWSER);\n\n          case 3:\n            cryptoKey = _context6.sent;\n            _context6.next = 6;\n            return subtle.sign({\n              length: LENGTH_512,\n              name: HMAC_BROWSER\n            }, cryptoKey, data);\n\n          case 6:\n            signature = _context6.sent;\n            return _context6.abrupt(\"return\", new Uint8Array(signature));\n\n          case 8:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n  return _browserHmacSha512Sign.apply(this, arguments);\n}\n\nexport function browserSha256(_x13) {\n  return _browserSha.apply(this, arguments);\n}\n\nfunction _browserSha() {\n  _browserSha = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context7.next = 3;\n            return subtle.digest({\n              name: SHA256_BROWSER_ALGO\n            }, data);\n\n          case 3:\n            result = _context7.sent;\n            return _context7.abrupt(\"return\", new Uint8Array(result));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _browserSha.apply(this, arguments);\n}\n\nexport function browserSha512(_x14) {\n  return _browserSha2.apply(this, arguments);\n}\n\nfunction _browserSha2() {\n  _browserSha2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee8(data) {\n    var subtle, result;\n    return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            subtle = env.getSubtleCrypto();\n            _context8.next = 3;\n            return subtle.digest({\n              name: SHA512_BROWSER_ALGO\n            }, data);\n\n          case 3:\n            result = _context8.sent;\n            return _context8.abrupt(\"return\", new Uint8Array(result));\n\n          case 5:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    }, _callee8);\n  }));\n  return _browserSha2.apply(this, arguments);\n}","map":{"version":3,"mappings":"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","names":["env","ENCRYPT_OP","DECRYPT_OP","SIGN_OP","VERIFY_OP","AES_BROWSER_ALGO","AES_LENGTH","HMAC_BROWSER_ALGO","HMAC_BROWSER","HMAC_LENGTH","SHA256_BROWSER_ALGO","SHA512_BROWSER_ALGO","LENGTH_512","getAlgo","type","length","name","hash","getOps","browserExportKey","cryptoKey","subtle","getSubtleCrypto","Uint8Array","exportKey","browserImportKey","buffer","importKey","browserAesEncrypt","iv","key","data","encrypt","result","browserAesDecrypt","decrypt","browserHmacSha256Sign","sign","signature","browserHmacSha512Sign","browserSha256","digest","browserSha512"],"sourceRoot":"","sources":["../../../src/lib/browser.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}