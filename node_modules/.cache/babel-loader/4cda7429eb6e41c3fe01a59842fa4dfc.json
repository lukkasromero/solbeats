{"ast":null,"code":"export const formatTimeStamp = timestamp => {\n  const EventTime = new Date(timestamp * 1000).toLocaleTimeString([], {\n    hourCycle: \"h23\"\n  });\n  const eventDate = new Date(timestamp * 1000).toLocaleDateString().split(\"/\");\n  const finalDate = [eventDate[2], (\"0\" + eventDate[0]).slice(-2), (\"0\" + eventDate[1]).slice(-2)].join(\"/\");\n  return `${finalDate} - ${EventTime}`;\n};\nexport const timeDifference = timestamp => {\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n  const current = new Date();\n  const previous = timestamp * 1000;\n  var elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n};\nexport const timestampToLocalHour = timestamp => {\n  let date = new Date(timestamp * 1000);\n  let hour = (date.getHours() < 10 ? \"0\" : \"\") + date.getHours();\n  let minute = (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  return `${hour}:${minute}`;\n};\nexport const timestampToLocalDaily = timestamp => {\n  let date = new Date(timestamp * 1000);\n  let day = (date.getDate() < 10 ? \"0\" : \"\") + date.getDate();\n  let month = (date.getMonth() + 1 < 10 ? \"0\" : \"\") + (date.getMonth() + 1);\n  let year = (date.getFullYear() < 10 ? \"0\" : \"\") + date.getFullYear();\n  return `${year}.${month}.${day}`;\n};\nexport const walletAddressSlicer = wallet => {\n  if (typeof wallet === \"string\") {\n    return wallet.substring(0, 5) + \"...\" + wallet.substring(wallet.length - 5, wallet.length);\n  }\n};\nexport const numberWithCommas = (number, tofixed) => {\n  if (tofixed) number = Number(number).toFixed(tofixed);\n  const str = number.toString().split(\".\");\n  str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n  return str.join(\".\");\n};","map":{"version":3,"names":["formatTimeStamp","timestamp","EventTime","Date","toLocaleTimeString","hourCycle","eventDate","toLocaleDateString","split","finalDate","slice","join","timeDifference","msPerMinute","msPerHour","msPerDay","msPerMonth","msPerYear","current","previous","elapsed","Math","round","timestampToLocalHour","date","hour","getHours","minute","getMinutes","timestampToLocalDaily","day","getDate","month","getMonth","year","getFullYear","walletAddressSlicer","wallet","substring","length","numberWithCommas","number","tofixed","Number","toFixed","str","toString","replace"],"sources":["D:/Ninja/NINJA ULTIMA VERSION 24-8/src/utils/util.js"],"sourcesContent":["export const formatTimeStamp = (timestamp) => {\n  const EventTime = new Date(timestamp * 1000).toLocaleTimeString([], {\n    hourCycle: \"h23\",\n  });\n  const eventDate = new Date(timestamp * 1000).toLocaleDateString().split(\"/\");\n  const finalDate = [\n    eventDate[2],\n    (\"0\" + eventDate[0]).slice(-2),\n    (\"0\" + eventDate[1]).slice(-2),\n  ].join(\"/\");\n  return `${finalDate} - ${EventTime}`;\n};\n\nexport const timeDifference = (timestamp) => {\n  const msPerMinute = 60 * 1000;\n  const msPerHour = msPerMinute * 60;\n  const msPerDay = msPerHour * 24;\n  const msPerMonth = msPerDay * 30;\n  const msPerYear = msPerDay * 365;\n  const current = new Date();\n  const previous = timestamp * 1000;\n\n  var elapsed = current - previous;\n\n  if (elapsed < msPerMinute) {\n    return Math.round(elapsed / 1000) + \" seconds ago\";\n  } else if (elapsed < msPerHour) {\n    return Math.round(elapsed / msPerMinute) + \" minutes ago\";\n  } else if (elapsed < msPerDay) {\n    return Math.round(elapsed / msPerHour) + \" hours ago\";\n  } else if (elapsed < msPerMonth) {\n    return \"approximately \" + Math.round(elapsed / msPerDay) + \" days ago\";\n  } else if (elapsed < msPerYear) {\n    return \"approximately \" + Math.round(elapsed / msPerMonth) + \" months ago\";\n  } else {\n    return \"approximately \" + Math.round(elapsed / msPerYear) + \" years ago\";\n  }\n};\n\nexport const timestampToLocalHour = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let hour = (date.getHours() < 10 ? \"0\" : \"\") + date.getHours();\n  let minute = (date.getMinutes() < 10 ? \"0\" : \"\") + date.getMinutes();\n  return `${hour}:${minute}`;\n};\n\nexport const timestampToLocalDaily = (timestamp) => {\n  let date = new Date(timestamp * 1000);\n  let day = (date.getDate() < 10 ? \"0\" : \"\") + date.getDate();\n  let month = (date.getMonth() + 1 < 10 ? \"0\" : \"\") + (date.getMonth() + 1);\n  let year = (date.getFullYear() < 10 ? \"0\" : \"\") + date.getFullYear();\n  return `${year}.${month}.${day}`;\n};\n\nexport const walletAddressSlicer = (wallet) => {\n  if (typeof wallet === \"string\") {\n    return (\n      wallet.substring(0, 5) +\n      \"...\" +\n      wallet.substring(wallet.length - 5, wallet.length)\n    );\n  }\n};\n\nexport const numberWithCommas = (number, tofixed) => {\n  if (tofixed) number = Number(number).toFixed(tofixed);\n\n  const str = number.toString().split(\".\");\n  str[0] = str[0].replace(/(\\d)(?=(\\d{3})+$)/g, \"$1,\");\n\n  return str.join(\".\");\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}