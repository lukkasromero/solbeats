{"ast":null,"code":"var _jsxFileName = \"D:\\\\NINJA ULTIMA VERSION NEWMAN CHUPAPIJA\\\\NINJA ULTIMA VERSION\\\\src\\\\store\\\\BlockchainContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { ABI, BUSDTOKENABI, BNB_ABI } from \"../utils/abi\";\nimport { providers, mobileProviders } from \"../utils/Web3Provider\";\nimport { ConsoleView, isMobile } from \"react-device-detect\";\nimport { toast } from \"react-toastify\";\nimport ToastMsg from \"../components/ToastMsg\";\nimport { toBeEnabled } from \"@testing-library/jest-dom/dist/matchers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlockchainContext = /*#__PURE__*/createContext({\n  notification: null,\n  showModal: function () {},\n  hideModal: function () {}\n});\nexport const BlockchainContextProvider = props => {\n  _s();\n\n  const [provider, setProvider] = useState();\n  const [web3Instance, setWeb3Instance] = useState();\n  const [web3Modal, setWeb3Modal] = useState();\n  const [Contract, setContract] = useState();\n  const [BNBContract, setBNBContract] = useState();\n  const [account, setAccount] = useState();\n  const [usdPrice, setUsdPrice] = useState(0);\n  const [walletBalance, setWalletBalance] = useState(\"000.000\");\n  const [BNBwalletBalance, setBNBWalletBalance] = useState(\"000.000\");\n  const [interv, setInterv] = useState();\n  const [ischange, setIschange] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [hatchpending, setHatchPending] = useState(false);\n  const [hatchpendingBNB, setHatchPendingBNB] = useState(false);\n  const [Sellpending, setSellpending] = useState(false);\n  const [SellpendingBNB, setSellpendingBNB] = useState(false);\n  const [donatepending, setDonatePending] = useState(false);\n  const [userCheckPoint, setUserCheckPoint] = useState();\n  const [BNBuserCheckPoint, setBNBUserCheckPoint] = useState();\n  const [refCheck, setRefCheck] = useState(false);\n  const [BNBrefCheck, setBNBRefCheck] = useState(false);\n  const [networkOpen, setNetworkOpen] = useState(false);\n  const [myMiner, setMyMiner] = useState(\"0\");\n  const [myBNBMiner, setMyBNBMiner] = useState(\"0\");\n  const [myreward, setMyReward] = useState(\"0\");\n  const [myBNBreward, setMyBNBReward] = useState(\"0\");\n  const [busdStakeText, setBusdStakeText] = useState(\"Enable\");\n  const [donateText, setDonateText] = useState(\"Enable\");\n  var interva;\n  var depositInterva;\n  let networkData = [{\n    chainId: \"0x38\",\n    chainName: \"BSCMAINET\",\n    rpcUrls: [\"https://bsc-dataseed1.binance.org\"],\n    nativeCurrency: {\n      name: \"BINANCE COIN\",\n      symbol: \"BNB\",\n      decimals: 18\n    },\n    blockExplorerUrls: [\"https://bscscan.com/\"]\n  }]; // let networkData = [\n  //   {\n  //     chainId: \"0x61\",\n  //     chainName: \"BSC testnet\",\n  //     rpcUrls: [\"https://data-seed-prebsc-2-s3.binance.org:8545/\"],\n  //     nativeCurrency: {\n  //       name: \"BINANCE COIN\",\n  //       symbol: \"TBNB\",\n  //       decimals: 18,\n  //     },\n  //     blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n  //   },\n  // ];\n\n  useEffect(() => {\n    if (localStorage.getItem(\"account\") && localStorage.getItem(\"account\") !== \"undefined\") {\n      connectToWallet(\"wallet\");\n    } else {\n      connectToWallet(\"noWallet\");\n    } // toast.success(<NewDepositToast />, {\n    //   position: \"bottom-left\",\n    // });\n\n  }, []);\n  useEffect(() => {\n    if (provider && account && web3Instance.currentProvider.isMetaMask === true && ischange) {\n      setIschange(false);\n      provider.on(\"accountsChanged\", accounts => {\n        changeUserCheckPoint();\n        setAccount(accounts[0]);\n        fetchDataFromContract(Contract, web3Instance, accounts[0]);\n        BNBfetchDataFromContract(BNBContract, web3Instance, accounts[0]);\n      });\n    }\n\n    if (provider && account && web3Instance.currentProvider.isMetaMask === true && ischange) {\n      setIschange(false);\n      provider.on(\"networkChanged\", networkId => {\n        if (Number(networkId) != Number(process.env.REACT_APP_CHAIN_ID)) {\n          setNetworkOpen(true);\n        } else {\n          if (!networkOpen) {\n            connectToWallet();\n          } else {\n            setNetworkOpen(false);\n          }\n        }\n      });\n    }\n  });\n\n  const getRealTimeDataBNB = async (contract, web3, account) => {\n    interva = setInterval(async () => {\n      let accountsInstance = await web3.eth.getAccounts();\n      let account = accountsInstance[0]; // get global info\n\n      if (account) {} else {\n        setBNBWalletBalance(\"000.000\");\n      }\n    }, 5000);\n    setInterv(interva);\n  };\n\n  const getRealTimeData = async (contract, web3, account) => {\n    interva = setInterval(async () => {\n      let accountsInstance = await web3.eth.getAccounts();\n      let account = accountsInstance[0]; // get global info\n\n      if (account) {} else {\n        setWalletBalance(\"000.000\");\n      }\n    }, 5000);\n    setInterv(interva);\n  };\n\n  const connectToWallet = async type => {\n    if (type === \"noWallet\") {\n      const web3 = new Web3(process.env.REACT_APP_RPF_NODE);\n      const contractInstance = new web3.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n      setContract(contractInstance);\n      const bnbContractInstance = new web3.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n      setBNBContract(bnbContractInstance);\n      setWeb3Instance(web3);\n      setProvider(provider);\n      fetchDataFromContract(contractInstance, web3, null);\n      BNBfetchDataFromContract(bnbContractInstance, web3, null);\n    } else {\n      const web3Modal = new Web3Modal({\n        cacheProvider: true,\n        providerOptions: isMobile ? mobileProviders : providers,\n        theme: \"dark\"\n      });\n      let provider;\n      await web3Modal.connect(web3Modal).then(res => {\n        provider = res;\n      }).catch(err => {\n        provider = process.env.REACT_APP_RPF_NODE;\n      });\n      const web3 = new Web3(provider);\n      const account = await web3.eth.getAccounts();\n      const chainId = await web3.eth.net.getId();\n\n      if (Number(chainId) != Number(process.env.REACT_APP_CHAIN_ID)) {\n        setNetworkOpen(true);\n      } else {\n        if (account.length > 0 && networkOpen) {\n          toast.success(\"Account connected\", {\n            position: \"bottom-right\"\n          });\n        }\n      }\n\n      const contractInstance = new web3.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n      setContract(contractInstance);\n      const bnbContractInstance = new web3.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n      setBNBContract(bnbContractInstance);\n      account.length > 0 && setAccount(account[0]);\n      setWeb3Instance(web3);\n      setProvider(provider);\n      setWeb3Modal(web3Modal);\n      fetchDataFromContract(contractInstance, web3, account[0]);\n      BNBfetchDataFromContract(bnbContractInstance, web3, account[0]);\n      localStorage.setItem(\"account\", account[0]);\n    }\n  };\n\n  const c = Contract,\n        w = web3Instance,\n        a = account;\n  const array = [c, w, a];\n  const bnbArray = [BNBContract, w, a]; // Fetch Account data from BNB Contract\n\n  const BNBfetchDataFromContract = async (contract, web3, account) => {\n    if (contract && account) {\n      await web3.eth.getBalance(account, async (err, res) => {\n        let b = web3.utils.fromWei(res, \"ether\");\n        await setBNBWalletBalance(b);\n      });\n      await contract.methods.users(account).call((error, result) => {\n        if (!error) {\n          if (Number(result.checkpoint) > 0) {\n            setBNBUserCheckPoint(Number(result.checkpoint) * 1000 + 86400 * 1000);\n            setRefCheck(true);\n            setBNBRefCheck(true);\n          } else {\n            setBNBUserCheckPoint(0);\n            setBNBRefCheck(false);\n          }\n        }\n      });\n      await contract.methods.getMyMiners(account).call((error, result) => {\n        if (!error) {\n          setMyBNBMiner(result);\n        }\n      });\n      await contract.methods.getMyEggs(account).call(async (error, egg) => {\n        if (!error) {\n          if (egg > 0) {\n            await contract.methods.calculateEggSell(egg).call((error, result) => {\n              if (!error) {\n                setMyBNBReward(web3.utils.fromWei(result, \"ether\")); // setMyReward(web3.utils.fromWei(result));\n              }\n            });\n          } else {\n            setMyBNBReward(0);\n          }\n        }\n      }); // get user info\n\n      checkEnable(web3, account);\n    }\n\n    if (!Contract) {\n      getRealTimeDataBNB(contract, web3, account);\n    }\n  };\n\n  const fetchDataFromContract = async (contract, web3, account) => {\n    if (contract && account) {\n      const busdContract = new web3.eth.Contract(BUSDTOKENABI, process.env.REACT_APP_BUSD_CONRACT);\n      await busdContract.methods.balanceOf(account).call((error, result) => {\n        if (!error) {\n          setWalletBalance(web3.utils.fromWei(result));\n        }\n      });\n      await contract.methods.users(account).call((error, result) => {\n        if (!error) {\n          if (Number(result.checkpoint) > 0) {\n            setUserCheckPoint(Number(result.checkpoint) * 1000 + 86400 * 1000);\n            setRefCheck(true);\n          } else {\n            setUserCheckPoint(0);\n            setRefCheck(false);\n          }\n        }\n      });\n      await contract.methods.getMyMiners(account).call((error, result) => {\n        if (!error) {\n          setMyMiner(result);\n        }\n      });\n      await contract.methods.getMyEggs(account).call(async (error, egg) => {\n        if (!error) {\n          if (egg > 0) {\n            await contract.methods.calculateEggSell(egg).call((error, result) => {\n              if (!error) {\n                setMyReward(web3.utils.fromWei(result));\n              }\n            });\n          } else {\n            setMyReward(0);\n          }\n        }\n      }); // get user info\n\n      checkEnable(web3, account);\n    }\n\n    if (!Contract) {\n      getRealTimeData(contract, web3, account);\n    }\n  }; // Buy Egg For BNB Contract\n\n\n  const buyEggsBNB = async amount => {\n    console.log(\"Buy BNB EGGS \" + amount);\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      let refAccount;\n\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const bnbContractInstance = new web3Instance.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n      console.log(bnbContractInstance);\n      await bnbContractInstance.methods.buyEggs(refAccount).send({\n        from: account,\n        value: web3Instance.utils.toWei(amount.toString())\n      }, (error, result) => {\n        if (!error) {\n          setPending(true);\n        }\n      }).on(\"receipt\", function (receipt) {\n        setPending(false);\n        BNBfetchDataFromContract(BNBContract, web3Instance, account);\n        fetchDataFromContract(Contract, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt,\n          type: \"token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n        const [contract, web3, acc] = array;\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setPending(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  const buyEggs = async amount => {\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      let refAccount;\n\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const contractInstance = new web3Instance.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n      console.log(contractInstance);\n      await contractInstance.methods.buyEggs(web3Instance.utils.toWei(amount.toString()), refAccount).send({\n        from: account\n      }, (error, result) => {\n        if (!error) {\n          setPending(true);\n        }\n      }).on(\"receipt\", function (receipt) {\n        setPending(false);\n        BNBfetchDataFromContract(BNBContract, web3Instance, account);\n        fetchDataFromContract(Contract, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt,\n          type: \"token\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n        const [contract, web3, acc] = array;\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setPending(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  }; // Hatch Bird For BNB Contract\n\n\n  const hatchBirdBNB = async () => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      let refAccount;\n\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const bnbContractInstance = new web3Instance.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n      console.log(bnbContractInstance);\n      await bnbContractInstance.methods.hatchEggs(refAccount).send({\n        from: account\n      }, (error, result) => {\n        if (!error) {\n          setHatchPendingBNB(true);\n        }\n      }).on(\"receipt\", function (receipt) {\n        setHatchPendingBNB(false);\n        fetchDataFromContract(Contract, web3Instance, account);\n        BNBfetchDataFromContract(BNBContract, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setHatchPendingBNB(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  const hatchBird = async () => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      let refAccount;\n\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const contractInstance = new web3Instance.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n      await contractInstance.methods.hatchEggs(refAccount).send({\n        from: account\n      }, (error, result) => {\n        if (!error) {\n          setHatchPending(true);\n        }\n      }).on(\"receipt\", function (receipt) {\n        setHatchPending(false);\n        fetchDataFromContract(Contract, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 538,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setHatchPending(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  const sellBird = async type => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      const contractInstance = new web3Instance.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n      await contractInstance.methods.sellEggs().send({\n        from: account\n      }, (error, result) => {\n        if (!error) {\n          setSellpending(true);\n        }\n      }).on(\"receipt\", async function (receipt) {\n        setSellpending(false);\n        fetchDataFromContract(contractInstance, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setSellpending(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  }; // Sell Bird Function for BNB Contract\n\n\n  const sellBirdBNB = async type => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      const bnbContractInstance = new web3Instance.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n      console.log(bnbContractInstance);\n      await bnbContractInstance.methods.sellEggs().send({\n        from: account\n      }, (error, result) => {\n        if (!error) {\n          setSellpendingBNB(true);\n        }\n      }).on(\"receipt\", async function (receipt) {\n        setSellpendingBNB(false);\n        fetchDataFromContract(Contract, web3Instance, account);\n        BNBfetchDataFromContract(bnbContractInstance, web3Instance, account);\n        toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n          receipt: receipt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 630,\n          columnNumber: 25\n        }, this), {\n          position: \"bottom-right\"\n        });\n      }).catch(err => {\n        toast.error(\"Transaction Rejected\", {\n          position: \"bottom-right\"\n        });\n        setSellpendingBNB(false);\n      });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  const handleDonate = async amount => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      if (Number(amount) > 0) {\n        const contractInstance = new web3Instance.eth.Contract(ABI, process.env.REACT_APP_CONTRACT);\n        await contractInstance.methods.buyBot(web3Instance.utils.toWei(amount.toString())).send({\n          from: account\n        }, (error, result) => {\n          if (!error) {\n            setDonatePending(true);\n          }\n        }).on(\"receipt\", function (receipt) {\n          setDonatePending(false);\n          fetchDataFromContract(Contract, web3Instance, account);\n          toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n            receipt: receipt,\n            type: \"token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 680,\n            columnNumber: 27\n          }, this), {\n            position: \"bottom-right\"\n          });\n        }).catch(err => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\"\n          });\n          setDonatePending(false);\n        });\n      } else {\n        toast.error(\"Enter vaild amount\", {\n          position: \"bottom-right\"\n        });\n      }\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  }; // Donate Function Handler for BNB Contract\n\n\n  const bnbHandleDonate = async amount => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      if (Number(amount) > 0) {\n        const contractInstance = new web3Instance.eth.Contract(BNB_ABI, process.env.REACT_APP_BNB_CONTRACT);\n        await contractInstance.methods.buyBot().send({\n          from: account,\n          value: web3Instance.utils.toWei(amount.toString())\n        }, (error, result) => {\n          if (!error) {\n            setDonatePending(true);\n          }\n        }).on(\"receipt\", function (receipt) {\n          setDonatePending(false);\n          fetchDataFromContract(Contract, web3Instance, account);\n          toast.success( /*#__PURE__*/_jsxDEV(ToastMsg, {\n            receipt: receipt,\n            type: \"token\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 738,\n            columnNumber: 27\n          }, this), {\n            position: \"bottom-right\"\n          });\n        }).catch(err => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\"\n          });\n          setDonatePending(false);\n        });\n      } else {\n        toast.error(\"Enter vaild amount\", {\n          position: \"bottom-right\"\n        });\n      }\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\"\n      });\n    }\n  };\n\n  const disconnectWallet = async () => {\n    setAccount(null);\n    localStorage.removeItem(\"WEB3_CONNECT_CACHED_PROVIDER\");\n    localStorage.removeItem(\"walletconnect\");\n    localStorage.removeItem(\"account\");\n    setProvider(null);\n    clearInterval(interv);\n  };\n\n  const approveBusd = async account => {\n    const checkChain = await checkChainId();\n\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\"\n      });\n    }\n\n    if (account) {\n      try {\n        const ContractInst = new web3Instance.eth.Contract(BUSDTOKENABI, process.env.REACT_APP_BUSD_CONRACT);\n        const amountNumber = 1000000000000000000000000000000 * Math.pow(10, 18);\n        const amountNumberWei = \"0x\" + amountNumber.toString(16);\n        ContractInst.methods.approve(process.env.REACT_APP_CONTRACT, amountNumberWei).send({\n          from: account\n        }, (error, result) => {\n          if (!error) {\n            setPending(true);\n          } else {}\n        }).on(\"receipt\", receipt => {\n          toast.success(\"Enable Successfully\");\n          setBusdStakeText(\"Invest\");\n          setDonateText(\"Donate Now\");\n          setPending(false);\n        }).on(\"error\", err => {\n          toast.error(err);\n          setPending(false);\n        });\n      } catch (error) {\n        console.log(\"Failed: \" + error);\n      }\n    } else {\n      toast.error(\"Please connect to your wallet\");\n    }\n  };\n\n  const checkEnable = async (web3, account) => {\n    const ContractBusdInst = new web3.eth.Contract(BUSDTOKENABI, process.env.REACT_APP_BUSD_CONRACT);\n    await ContractBusdInst.methods.allowance(account, process.env.REACT_APP_CONTRACT).call((error, result) => {\n      if (!error) {\n        if (result > 0) {\n          setBusdStakeText(\"Invest\");\n          setDonateText(\"Donate Now\");\n        } else {\n          setBusdStakeText(\"Enable\");\n          setDonateText(\"Enable\");\n        }\n      }\n    });\n  };\n\n  const handleChangeNetwork = web3 => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: \"wallet_addEthereumChain\",\n        params: networkData\n      }).then(() => {\n        connectToWallet();\n        setNetworkOpen(false);\n      });\n    }\n  };\n\n  const checkChainId = async () => {\n    if (web3Instance) {\n      const chainId = await web3Instance.eth.net.getId();\n\n      if (Number(chainId) === Number(process.env.REACT_APP_CHAIN_ID)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const changeNetworkOpen = () => {\n    setNetworkOpen(false);\n  };\n\n  const changeUserCheckPoint = () => {\n    setUserCheckPoint(0);\n    setRefCheck(false);\n  };\n\n  const context = {\n    provider: provider,\n    web3Instance: web3Instance,\n    Contract: Contract,\n    BNBContract: BNBContract,\n    account: account,\n    usdPrice: usdPrice,\n    walletBalance: walletBalance,\n    BNBwalletBalance: BNBwalletBalance,\n    handleConnectToWallet: connectToWallet,\n    handleDisconnectWallet: disconnectWallet,\n    pending: pending,\n    changeUserCheckPoint: changeUserCheckPoint,\n    userCheckPoint,\n    BNBuserCheckPoint,\n    buyEggs,\n    buyEggsBNB,\n    sellBird,\n    sellBirdBNB,\n    approveBusd,\n    changeNetworkOpen,\n    handleChangeNetwork,\n    myMiner,\n    myreward,\n    myBNBMiner,\n    myBNBreward,\n    hatchpending,\n    hatchpendingBNB,\n    Sellpending,\n    SellpendingBNB,\n    array,\n    bnbArray,\n    networkOpen,\n    busdStakeText,\n    hatchBird,\n    hatchBirdBNB,\n    refCheck,\n    BNBrefCheck,\n    handleDonate,\n    bnbHandleDonate,\n    donatepending,\n    donateText\n  };\n  return /*#__PURE__*/_jsxDEV(BlockchainContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 910,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BlockchainContextProvider, \"obcIa0ga8nLB3tL7cGfSVcEFTA8=\");\n\n_c = BlockchainContextProvider;\nexport default BlockchainContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"BlockchainContextProvider\");","map":{"version":3,"names":["createContext","useState","useEffect","Web3","Web3Modal","ABI","BUSDTOKENABI","BNB_ABI","providers","mobileProviders","ConsoleView","isMobile","toast","ToastMsg","toBeEnabled","BlockchainContext","notification","showModal","hideModal","BlockchainContextProvider","props","provider","setProvider","web3Instance","setWeb3Instance","web3Modal","setWeb3Modal","Contract","setContract","BNBContract","setBNBContract","account","setAccount","usdPrice","setUsdPrice","walletBalance","setWalletBalance","BNBwalletBalance","setBNBWalletBalance","interv","setInterv","ischange","setIschange","pending","setPending","hatchpending","setHatchPending","hatchpendingBNB","setHatchPendingBNB","Sellpending","setSellpending","SellpendingBNB","setSellpendingBNB","donatepending","setDonatePending","userCheckPoint","setUserCheckPoint","BNBuserCheckPoint","setBNBUserCheckPoint","refCheck","setRefCheck","BNBrefCheck","setBNBRefCheck","networkOpen","setNetworkOpen","myMiner","setMyMiner","myBNBMiner","setMyBNBMiner","myreward","setMyReward","myBNBreward","setMyBNBReward","busdStakeText","setBusdStakeText","donateText","setDonateText","interva","depositInterva","networkData","chainId","chainName","rpcUrls","nativeCurrency","name","symbol","decimals","blockExplorerUrls","localStorage","getItem","connectToWallet","currentProvider","isMetaMask","on","accounts","changeUserCheckPoint","fetchDataFromContract","BNBfetchDataFromContract","networkId","Number","process","env","REACT_APP_CHAIN_ID","getRealTimeDataBNB","contract","web3","setInterval","accountsInstance","eth","getAccounts","getRealTimeData","type","REACT_APP_RPF_NODE","contractInstance","REACT_APP_CONTRACT","bnbContractInstance","REACT_APP_BNB_CONTRACT","cacheProvider","providerOptions","theme","connect","then","res","catch","err","net","getId","length","success","position","setItem","c","w","a","array","bnbArray","getBalance","b","utils","fromWei","methods","users","call","error","result","checkpoint","getMyMiners","getMyEggs","egg","calculateEggSell","checkEnable","busdContract","REACT_APP_BUSD_CONRACT","balanceOf","buyEggsBNB","amount","console","log","checkChain","checkChainId","refAccount","buyEggs","send","from","value","toWei","toString","receipt","acc","hatchBirdBNB","Date","getTime","warn","hatchEggs","hatchBird","sellBird","sellEggs","sellBirdBNB","handleDonate","buyBot","bnbHandleDonate","disconnectWallet","removeItem","clearInterval","approveBusd","ContractInst","amountNumber","Math","pow","amountNumberWei","approve","ContractBusdInst","allowance","handleChangeNetwork","window","ethereum","request","method","params","changeNetworkOpen","context","handleConnectToWallet","handleDisconnectWallet","children"],"sources":["D:/NINJA ULTIMA VERSION NEWMAN CHUPAPIJA/NINJA ULTIMA VERSION/src/store/BlockchainContext.js"],"sourcesContent":["import { createContext, useState, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport Web3Modal from \"web3modal\";\nimport { ABI, BUSDTOKENABI, BNB_ABI } from \"../utils/abi\";\nimport { providers, mobileProviders } from \"../utils/Web3Provider\";\nimport { ConsoleView, isMobile } from \"react-device-detect\";\nimport { toast } from \"react-toastify\";\nimport ToastMsg from \"../components/ToastMsg\";\nimport { toBeEnabled } from \"@testing-library/jest-dom/dist/matchers\";\n\nconst BlockchainContext = createContext({\n  notification: null,\n  showModal: function () {},\n  hideModal: function () {},\n});\n\nexport const BlockchainContextProvider = (props) => {\n  const [provider, setProvider] = useState();\n  const [web3Instance, setWeb3Instance] = useState();\n  const [web3Modal, setWeb3Modal] = useState();\n  const [Contract, setContract] = useState();\n  const [BNBContract, setBNBContract] = useState();\n  const [account, setAccount] = useState();\n  const [usdPrice, setUsdPrice] = useState(0);\n  const [walletBalance, setWalletBalance] = useState(\"000.000\");\n  const [BNBwalletBalance, setBNBWalletBalance] = useState(\"000.000\");\n  const [interv, setInterv] = useState();\n  const [ischange, setIschange] = useState(true);\n  const [pending, setPending] = useState(false);\n  const [hatchpending, setHatchPending] = useState(false);\n  const [hatchpendingBNB, setHatchPendingBNB] = useState(false);\n  const [Sellpending, setSellpending] = useState(false);\n  const [SellpendingBNB, setSellpendingBNB] = useState(false);\n  const [donatepending, setDonatePending] = useState(false);\n  const [userCheckPoint, setUserCheckPoint] = useState();\n  const [BNBuserCheckPoint, setBNBUserCheckPoint] = useState();\n  const [refCheck, setRefCheck] = useState(false);\n  const [BNBrefCheck, setBNBRefCheck] = useState(false);\n  const [networkOpen, setNetworkOpen] = useState(false);\n  const [myMiner, setMyMiner] = useState(\"0\");\n  const [myBNBMiner, setMyBNBMiner] = useState(\"0\");\n  const [myreward, setMyReward] = useState(\"0\");\n  const [myBNBreward, setMyBNBReward] = useState(\"0\");\n  const [busdStakeText, setBusdStakeText] = useState(\"Enable\");\n  const [donateText, setDonateText] = useState(\"Enable\");\n  var interva;\n  var depositInterva;\n  let networkData = [\n    {\n      chainId: \"0x38\",\n      chainName: \"BSCMAINET\",\n      rpcUrls: [\"https://bsc-dataseed1.binance.org\"],\n      nativeCurrency: {\n        name: \"BINANCE COIN\",\n        symbol: \"BNB\",\n        decimals: 18,\n      },\n      blockExplorerUrls: [\"https://bscscan.com/\"],\n    },\n  ];\n\n  // let networkData = [\n  //   {\n  //     chainId: \"0x61\",\n  //     chainName: \"BSC testnet\",\n  //     rpcUrls: [\"https://data-seed-prebsc-2-s3.binance.org:8545/\"],\n  //     nativeCurrency: {\n  //       name: \"BINANCE COIN\",\n  //       symbol: \"TBNB\",\n  //       decimals: 18,\n  //     },\n  //     blockExplorerUrls: [\"https://testnet.bscscan.com/\"],\n  //   },\n  // ];\n\n  useEffect(() => {\n    if (\n      localStorage.getItem(\"account\") &&\n      localStorage.getItem(\"account\") !== \"undefined\"\n    ) {\n      connectToWallet(\"wallet\");\n    } else {\n      connectToWallet(\"noWallet\");\n    }\n    // toast.success(<NewDepositToast />, {\n    //   position: \"bottom-left\",\n    // });\n  }, []);\n\n  useEffect(() => {\n    if (\n      provider &&\n      account &&\n      web3Instance.currentProvider.isMetaMask === true &&\n      ischange\n    ) {\n      setIschange(false);\n      provider.on(\"accountsChanged\", (accounts) => {\n        changeUserCheckPoint();\n        setAccount(accounts[0]);\n        fetchDataFromContract(Contract, web3Instance, accounts[0]);\n        BNBfetchDataFromContract(BNBContract, web3Instance, accounts[0]);\n      });\n    }\n    if (\n      provider &&\n      account &&\n      web3Instance.currentProvider.isMetaMask === true &&\n      ischange\n    ) {\n      setIschange(false);\n      provider.on(\"networkChanged\", (networkId) => {\n        if (Number(networkId) != Number(process.env.REACT_APP_CHAIN_ID)) {\n          setNetworkOpen(true);\n        } else {\n          if (!networkOpen) {\n            connectToWallet();\n          } else {\n            setNetworkOpen(false);\n          }\n        }\n      });\n    }\n  });\n\n  const getRealTimeDataBNB = async (contract, web3, account) => {\n    interva = setInterval(async () => {\n      let accountsInstance = await web3.eth.getAccounts();\n      let account = accountsInstance[0];\n      // get global info\n\n      if (account) {\n      } else {\n        setBNBWalletBalance(\"000.000\");\n      }\n    }, 5000);\n    setInterv(interva);\n  };\n\n  const getRealTimeData = async (contract, web3, account) => {\n    interva = setInterval(async () => {\n      let accountsInstance = await web3.eth.getAccounts();\n      let account = accountsInstance[0];\n      // get global info\n\n      if (account) {\n      } else {\n        setWalletBalance(\"000.000\");\n      }\n    }, 5000);\n    setInterv(interva);\n  };\n\n  const connectToWallet = async (type) => {\n    if (type === \"noWallet\") {\n      const web3 = new Web3(process.env.REACT_APP_RPF_NODE);\n      const contractInstance = new web3.eth.Contract(\n        ABI,\n        process.env.REACT_APP_CONTRACT\n      );\n      setContract(contractInstance);\n      const bnbContractInstance = new web3.eth.Contract(\n        BNB_ABI,\n        process.env.REACT_APP_BNB_CONTRACT\n      );\n      setBNBContract(bnbContractInstance);\n      setWeb3Instance(web3);\n      setProvider(provider);\n      fetchDataFromContract(contractInstance, web3, null);\n      BNBfetchDataFromContract(bnbContractInstance, web3, null);\n    } else {\n      const web3Modal = new Web3Modal({\n        cacheProvider: true,\n        providerOptions: isMobile ? mobileProviders : providers,\n        theme: \"dark\",\n      });\n      let provider;\n      await web3Modal\n        .connect(web3Modal)\n        .then((res) => {\n          provider = res;\n        })\n        .catch((err) => {\n          provider = process.env.REACT_APP_RPF_NODE;\n        });\n      const web3 = new Web3(provider);\n      const account = await web3.eth.getAccounts();\n      const chainId = await web3.eth.net.getId();\n      if (Number(chainId) != Number(process.env.REACT_APP_CHAIN_ID)) {\n        setNetworkOpen(true);\n      } else {\n        if (account.length > 0 && networkOpen) {\n          toast.success(\"Account connected\", {\n            position: \"bottom-right\",\n          });\n        }\n      }\n      const contractInstance = new web3.eth.Contract(\n        ABI,\n        process.env.REACT_APP_CONTRACT\n      );\n\n      setContract(contractInstance);\n      const bnbContractInstance = new web3.eth.Contract(\n        BNB_ABI,\n        process.env.REACT_APP_BNB_CONTRACT\n      );\n      setBNBContract(bnbContractInstance);\n      account.length > 0 && setAccount(account[0]);\n      setWeb3Instance(web3);\n      setProvider(provider);\n      setWeb3Modal(web3Modal);\n      fetchDataFromContract(contractInstance, web3, account[0]);\n      BNBfetchDataFromContract(bnbContractInstance, web3, account[0]);\n      localStorage.setItem(\"account\", account[0]);\n    }\n  };\n\n  const c = Contract,\n    w = web3Instance,\n    a = account;\n\n  const array = [c, w, a];\n  const bnbArray = [BNBContract, w, a];\n\n  // Fetch Account data from BNB Contract\n  const BNBfetchDataFromContract = async (contract, web3, account) => {\n    if (contract && account) {\n      await web3.eth.getBalance(account, async (err, res) => {\n        let b = web3.utils.fromWei(res, \"ether\");\n        await setBNBWalletBalance(b);\n      });\n\n      await contract.methods.users(account).call((error, result) => {\n        if (!error) {\n          if (Number(result.checkpoint) > 0) {\n            setBNBUserCheckPoint(\n              Number(result.checkpoint) * 1000 + 86400 * 1000\n            );\n            setRefCheck(true);\n            setBNBRefCheck(true);\n          } else {\n            setBNBUserCheckPoint(0);\n            setBNBRefCheck(false);\n          }\n        }\n      });\n      await contract.methods.getMyMiners(account).call((error, result) => {\n        if (!error) {\n          setMyBNBMiner(result);\n        }\n      });\n      await contract.methods.getMyEggs(account).call(async (error, egg) => {\n        if (!error) {\n          if (egg > 0) {\n            await contract.methods\n              .calculateEggSell(egg)\n              .call((error, result) => {\n                if (!error) {\n                  setMyBNBReward(web3.utils.fromWei(result, \"ether\"));\n                  // setMyReward(web3.utils.fromWei(result));\n                }\n              });\n          } else {\n            setMyBNBReward(0);\n          }\n        }\n      });\n      // get user info\n      checkEnable(web3, account);\n    }\n    if (!Contract) {\n      getRealTimeDataBNB(contract, web3, account);\n    }\n  };\n\n  const fetchDataFromContract = async (contract, web3, account) => {\n    if (contract && account) {\n      const busdContract = new web3.eth.Contract(\n        BUSDTOKENABI,\n        process.env.REACT_APP_BUSD_CONRACT\n      );\n      await busdContract.methods.balanceOf(account).call((error, result) => {\n        if (!error) {\n          setWalletBalance(web3.utils.fromWei(result));\n        }\n      });\n      await contract.methods.users(account).call((error, result) => {\n        if (!error) {\n          if (Number(result.checkpoint) > 0) {\n            setUserCheckPoint(Number(result.checkpoint) * 1000 + 86400 * 1000);\n            setRefCheck(true);\n          } else {\n            setUserCheckPoint(0);\n            setRefCheck(false);\n          }\n        }\n      });\n      await contract.methods.getMyMiners(account).call((error, result) => {\n        if (!error) {\n          setMyMiner(result);\n        }\n      });\n      await contract.methods.getMyEggs(account).call(async (error, egg) => {\n        if (!error) {\n          if (egg > 0) {\n            await contract.methods\n              .calculateEggSell(egg)\n              .call((error, result) => {\n                if (!error) {\n                  setMyReward(web3.utils.fromWei(result));\n                }\n              });\n          } else {\n            setMyReward(0);\n          }\n        }\n      });\n      // get user info\n      checkEnable(web3, account);\n    }\n    if (!Contract) {\n      getRealTimeData(contract, web3, account);\n    }\n  };\n\n  // Buy Egg For BNB Contract\n  const buyEggsBNB = async (amount) => {\n    console.log(\"Buy BNB EGGS \" + amount);\n\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      let refAccount;\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const bnbContractInstance = new web3Instance.eth.Contract(\n        BNB_ABI,\n        process.env.REACT_APP_BNB_CONTRACT\n      );\n      console.log(bnbContractInstance);\n      await bnbContractInstance.methods\n        .buyEggs(refAccount)\n        .send(\n          {\n            from: account,\n            value: web3Instance.utils.toWei(amount.toString()),\n          },\n          (error, result) => {\n            if (!error) {\n              setPending(true);\n            }\n          }\n        )\n        .on(\"receipt\", function (receipt) {\n          setPending(false);\n          BNBfetchDataFromContract(BNBContract, web3Instance, account);\n          fetchDataFromContract(Contract, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} type=\"token\" />, {\n            position: \"bottom-right\",\n          });\n\n          const [contract, web3, acc] = array;\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setPending(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  const buyEggs = async (amount) => {\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      let refAccount;\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n      const contractInstance = new web3Instance.eth.Contract(\n        ABI,\n        process.env.REACT_APP_CONTRACT\n      );\n      console.log(contractInstance);\n      await contractInstance.methods\n        .buyEggs(web3Instance.utils.toWei(amount.toString()), refAccount)\n        .send(\n          {\n            from: account,\n          },\n          (error, result) => {\n            if (!error) {\n              setPending(true);\n            }\n          }\n        )\n        .on(\"receipt\", function (receipt) {\n          setPending(false);\n          BNBfetchDataFromContract(BNBContract, web3Instance, account);\n          fetchDataFromContract(Contract, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} type=\"token\" />, {\n            position: \"bottom-right\",\n          });\n\n          const [contract, web3, acc] = array;\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setPending(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  // Hatch Bird For BNB Contract\n  const hatchBirdBNB = async () => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n\n    if (account) {\n      let refAccount;\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n\n      const bnbContractInstance = new web3Instance.eth.Contract(\n        BNB_ABI,\n        process.env.REACT_APP_BNB_CONTRACT\n      );\n      console.log(bnbContractInstance);\n      await bnbContractInstance.methods\n        .hatchEggs(refAccount)\n        .send(\n          {\n            from: account,\n          },\n          (error, result) => {\n            if (!error) {\n              setHatchPendingBNB(true);\n            }\n          }\n        )\n        .on(\"receipt\", function (receipt) {\n          setHatchPendingBNB(false);\n          fetchDataFromContract(Contract, web3Instance, account);\n          BNBfetchDataFromContract(BNBContract, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} />, {\n            position: \"bottom-right\",\n          });\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setHatchPendingBNB(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  const hatchBird = async () => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      let refAccount;\n      if (localStorage.getItem(\"baseRef\")) {\n        refAccount = localStorage.getItem(\"baseRef\");\n      } else {\n        refAccount = account;\n      }\n      const contractInstance = new web3Instance.eth.Contract(\n        ABI,\n        process.env.REACT_APP_CONTRACT\n      );\n      await contractInstance.methods\n        .hatchEggs(refAccount)\n        .send(\n          {\n            from: account,\n          },\n          (error, result) => {\n            if (!error) {\n              setHatchPending(true);\n            }\n          }\n        )\n        .on(\"receipt\", function (receipt) {\n          setHatchPending(false);\n          fetchDataFromContract(Contract, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} />, {\n            position: \"bottom-right\",\n          });\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setHatchPending(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  const sellBird = async (type) => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      const contractInstance = new web3Instance.eth.Contract(\n        ABI,\n        process.env.REACT_APP_CONTRACT\n      );\n      await contractInstance.methods\n        .sellEggs()\n        .send({ from: account }, (error, result) => {\n          if (!error) {\n            setSellpending(true);\n          }\n        })\n        .on(\"receipt\", async function (receipt) {\n          setSellpending(false);\n          fetchDataFromContract(contractInstance, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} />, {\n            position: \"bottom-right\",\n          });\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setSellpending(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  // Sell Bird Function for BNB Contract\n  const sellBirdBNB = async (type) => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      const bnbContractInstance = new web3Instance.eth.Contract(\n        BNB_ABI,\n        process.env.REACT_APP_BNB_CONTRACT\n      );\n      console.log(bnbContractInstance);\n\n      await bnbContractInstance.methods\n        .sellEggs()\n        .send({ from: account }, (error, result) => {\n          if (!error) {\n            setSellpendingBNB(true);\n          }\n        })\n        .on(\"receipt\", async function (receipt) {\n          setSellpendingBNB(false);\n          fetchDataFromContract(Contract, web3Instance, account);\n          BNBfetchDataFromContract(bnbContractInstance, web3Instance, account);\n          toast.success(<ToastMsg receipt={receipt} />, {\n            position: \"bottom-right\",\n          });\n        })\n        .catch((err) => {\n          toast.error(\"Transaction Rejected\", {\n            position: \"bottom-right\",\n          });\n          setSellpendingBNB(false);\n        });\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  const handleDonate = async (amount) => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      if (Number(amount) > 0) {\n        const contractInstance = new web3Instance.eth.Contract(\n          ABI,\n          process.env.REACT_APP_CONTRACT\n        );\n        await contractInstance.methods\n          .buyBot(web3Instance.utils.toWei(amount.toString()))\n          .send(\n            {\n              from: account,\n            },\n            (error, result) => {\n              if (!error) {\n                setDonatePending(true);\n              }\n            }\n          )\n          .on(\"receipt\", function (receipt) {\n            setDonatePending(false);\n            fetchDataFromContract(Contract, web3Instance, account);\n            toast.success(<ToastMsg receipt={receipt} type=\"token\" />, {\n              position: \"bottom-right\",\n            });\n          })\n          .catch((err) => {\n            toast.error(\"Transaction Rejected\", {\n              position: \"bottom-right\",\n            });\n            setDonatePending(false);\n          });\n      } else {\n        toast.error(\"Enter vaild amount\", {\n          position: \"bottom-right\",\n        });\n      }\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  // Donate Function Handler for BNB Contract\n  const bnbHandleDonate = async (amount) => {\n    if (new Date().getTime() < 1654512659) {\n      return toast.warn(\"Launch date is Saturday 14th May 2022 at 7pm UTC\", {\n        position: \"bottom-right\",\n      });\n    }\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      if (Number(amount) > 0) {\n        const contractInstance = new web3Instance.eth.Contract(\n          BNB_ABI,\n          process.env.REACT_APP_BNB_CONTRACT\n        );\n        await contractInstance.methods\n          .buyBot()\n          .send(\n            {\n              from: account,\n              value: web3Instance.utils.toWei(amount.toString()),\n            },\n            (error, result) => {\n              if (!error) {\n                setDonatePending(true);\n              }\n            }\n          )\n          .on(\"receipt\", function (receipt) {\n            setDonatePending(false);\n            fetchDataFromContract(Contract, web3Instance, account);\n\n            toast.success(<ToastMsg receipt={receipt} type=\"token\" />, {\n              position: \"bottom-right\",\n            });\n          })\n          .catch((err) => {\n            toast.error(\"Transaction Rejected\", {\n              position: \"bottom-right\",\n            });\n            setDonatePending(false);\n          });\n      } else {\n        toast.error(\"Enter vaild amount\", {\n          position: \"bottom-right\",\n        });\n      }\n    } else {\n      toast.error(\"Connect to your wallet\", {\n        position: \"bottom-right\",\n      });\n    }\n  };\n\n  const disconnectWallet = async () => {\n    setAccount(null);\n    localStorage.removeItem(\"WEB3_CONNECT_CACHED_PROVIDER\");\n    localStorage.removeItem(\"walletconnect\");\n    localStorage.removeItem(\"account\");\n    setProvider(null);\n    clearInterval(interv);\n  };\n\n  const approveBusd = async (account) => {\n    const checkChain = await checkChainId();\n    if (!checkChain) {\n      return toast.error(\"Wrong network\", {\n        position: \"bottom-right\",\n      });\n    }\n    if (account) {\n      try {\n        const ContractInst = new web3Instance.eth.Contract(\n          BUSDTOKENABI,\n          process.env.REACT_APP_BUSD_CONRACT\n        );\n        const amountNumber = 1000000000000000000000000000000 * Math.pow(10, 18);\n        const amountNumberWei = \"0x\" + amountNumber.toString(16);\n        ContractInst.methods\n          .approve(process.env.REACT_APP_CONTRACT, amountNumberWei)\n          .send({ from: account }, (error, result) => {\n            if (!error) {\n              setPending(true);\n            } else {\n            }\n          })\n          .on(\"receipt\", (receipt) => {\n            toast.success(\"Enable Successfully\");\n            setBusdStakeText(\"Invest\");\n            setDonateText(\"Donate Now\");\n            setPending(false);\n          })\n          .on(\"error\", (err) => {\n            toast.error(err);\n            setPending(false);\n          });\n      } catch (error) {\n        console.log(\"Failed: \" + error);\n      }\n    } else {\n      toast.error(\"Please connect to your wallet\");\n    }\n  };\n\n  const checkEnable = async (web3, account) => {\n    const ContractBusdInst = new web3.eth.Contract(\n      BUSDTOKENABI,\n      process.env.REACT_APP_BUSD_CONRACT\n    );\n    await ContractBusdInst.methods\n      .allowance(account, process.env.REACT_APP_CONTRACT)\n      .call((error, result) => {\n        if (!error) {\n          if (result > 0) {\n            setBusdStakeText(\"Invest\");\n            setDonateText(\"Donate Now\");\n          } else {\n            setBusdStakeText(\"Enable\");\n            setDonateText(\"Enable\");\n          }\n        }\n      });\n  };\n\n  const handleChangeNetwork = (web3) => {\n    if (window.ethereum) {\n      window.ethereum\n        .request({\n          method: \"wallet_addEthereumChain\",\n          params: networkData,\n        })\n        .then(() => {\n          connectToWallet();\n          setNetworkOpen(false);\n        });\n    }\n  };\n\n  const checkChainId = async () => {\n    if (web3Instance) {\n      const chainId = await web3Instance.eth.net.getId();\n      if (Number(chainId) === Number(process.env.REACT_APP_CHAIN_ID)) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  };\n\n  const changeNetworkOpen = () => {\n    setNetworkOpen(false);\n  };\n\n  const changeUserCheckPoint = () => {\n    setUserCheckPoint(0);\n    setRefCheck(false);\n  };\n\n  const context = {\n    provider: provider,\n    web3Instance: web3Instance,\n    Contract: Contract,\n    BNBContract: BNBContract,\n    account: account,\n    usdPrice: usdPrice,\n    walletBalance: walletBalance,\n    BNBwalletBalance: BNBwalletBalance,\n    handleConnectToWallet: connectToWallet,\n    handleDisconnectWallet: disconnectWallet,\n    pending: pending,\n    changeUserCheckPoint: changeUserCheckPoint,\n    userCheckPoint,\n    BNBuserCheckPoint,\n    buyEggs,\n    buyEggsBNB,\n    sellBird,\n    sellBirdBNB,\n    approveBusd,\n    changeNetworkOpen,\n    handleChangeNetwork,\n    myMiner,\n    myreward,\n    myBNBMiner,\n    myBNBreward,\n    hatchpending,\n    hatchpendingBNB,\n    Sellpending,\n    SellpendingBNB,\n    array,\n    bnbArray,\n    networkOpen,\n    busdStakeText,\n    hatchBird,\n    hatchBirdBNB,\n    refCheck,\n    BNBrefCheck,\n    handleDonate,\n    bnbHandleDonate,\n    donatepending,\n    donateText,\n  };\n  return (\n    <BlockchainContext.Provider value={context}>\n      {props.children}\n    </BlockchainContext.Provider>\n  );\n};\n\nexport default BlockchainContext;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}